[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dragonmapper"
dynamic = ["version"]
description = "Identification and conversion functions for Chinese text processing"
readme = "README.rst"
license = "MIT"
authors = [
    { name = "Thomas Roten", email = "thomas@roten.us" },
]
requires-python = ">=3.8"
keywords = [
    "chinese",
    "mandarin",
    "transcription",
    "pinyin",
    "zhuyin",
    "ipa",
    "convert",
    "bopomofo",
    "hanzi",
    "characters",
    "readings",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "hanzidentifier ~= 1.2",
    "zhon ~= 2.0",
]

[project.urls]
Documentation = "https://tsroten.github.io/dragonmapper"
"Source code" = "https://github.com/tsroten/dragonmapper"

[tool.hatch.version]
path = "src/dragonmapper/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.hatch.envs.default.scripts]
test = "hatch run test:run"
format = "hatch run style:format"
lint = "hatch run style:check"
docs = "hatch run docs:html"

[tool.hatch.envs.docs]
dependencies = [
  "Sphinx",
  "releases"
]

[tool.hatch.envs.docs.scripts]
clean = "cd docs && make clean"
generate = "cd docs && make html"
view = "open docs/_build/html/index.html"
check = "cd docs && make linkcheck"
html = [
    "clean",
    "generate",
    "check",
    "view"
]

[tool.hatch.envs.test.scripts]
clean = "find . -type f -name '*.py[co]' -delete -o -type d -name __pycache__ -delete"
test = "python3 -Wdefault -m unittest -v"
run = [
    "clean",
    "test"
]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.style]
detached = true
dependencies = [
    "black",
    "flake8",
    "pep8-naming",
    "flake8-blind-except",
    "flake8-builtins",
    "flake8-pep3101",
    "flake8-string-format"
]

[tool.hatch.envs.style.scripts]
check = [
    "black -q --check --diff src tests",
    "flake8 src tests"
]
format = [
    "black -q src tests"
]